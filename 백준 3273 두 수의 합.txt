import java.io.*;
import java.util.*;

public class Main {
	
	static int N, ans;
	static int[] A;
	
	
	static FastReader scan = new FastReader();
	static StringBuilder sb = new StringBuilder();

	static void input() {
		
		N = scan.nextInt();
		A = new int[N + 1];
		
		for(int i=1;i<=N;i++) {
			A[i] = scan.nextInt();
		}
		
		ans = scan.nextInt();
		
	}
	static boolean findAns(int[] A, int L, int R, int X) {
		while(L<=R) {
			int mid = (L + R) / 2;
			if(A[mid] == X) {
				return true;
			}
			else if(A[mid] < X) {
				L = mid + 1;
			}
			else R = mid - 1;
		}
		return false;
	}
	
	
	
	static void find() {
		Arrays.sort(A,1,N+1);
		int count = 0;
		for(int j = 1;j<=N;j++) {
			if(findAns(A,j+ 1,N, ans -A[j])) {
				count++;
			}
			
		}

		System.out.println(count);
		
	}
	
	
	public static void main(String[] args) {
		input();
		find();
	}
	
	static class FastReader{
		BufferedReader br;
		StringTokenizer st;
		
		public FastReader() {
			br = new BufferedReader(new InputStreamReader(System.in));
		}
		
		public FastReader(String s) throws FileNotFoundException {
			br = new BufferedReader(new FileReader(new File(s)));
		}
		
		String next() {
			while(st == null || !st.hasMoreElements()) {
				try {
					st = new StringTokenizer(br.readLine());
				} catch(IOException e) {
					e.printStackTrace();
				}
			}
			return st.nextToken();
		}
		
		int nextInt() {
			return Integer.parseInt(next());
		}
		Long nextLong() {
			return Long.parseLong(next());
		}
		double nextDouble(){
			return Double.parseDouble(next());
		}
		String nextLine() {
			String str = "";
			try {
				str = br.readLine();
			}catch(IOException e) {
				e.printStackTrace();
			}
			return str;
		}
	}
}