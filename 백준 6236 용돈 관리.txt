import java.io.*;
import java.util.*;



public class Main {
	
	static int N,M;
	static int[] A;
	
	
	static FastReader scan = new FastReader();
	static StringBuilder sb = new StringBuilder();

	static void input() {
		N = scan.nextInt();
		M = scan.nextInt();
		A = new int[N + 1];
		for(int i =1;i<=N;i++){
			A[i] = scan.nextInt();
		}
	}

	
	static boolean findAns(int K) {
		int sum =0 , cnt = 1;
		for(int j = 1;j<=N;j++) {
			if(sum + A[j] > K){
				cnt ++;
				sum = A[j];
			} else {
				sum += A[j];
			}
		}
		return cnt <= M;
	}
	

	static void find() {
		int L = A[1], R = 1000000000, ans =0;
		for(int i= 1;i<=N;i++) {
			L = Math.max(L, A[i]);
		}
		while(L<=R) {
			int mid = (L + R) / 2;
			if(findAns(mid)) {
				ans = mid;
				R = mid - 1;
			} else {
				L = mid + 1;
			}
		}
		System.out.println(ans);
		}

		
		
	public static void main(String[] args) {
		input();
		find();
	}
	
	static class FastReader{
		BufferedReader br;
		StringTokenizer st;
		
		public FastReader() {
			br = new BufferedReader(new InputStreamReader(System.in));
		}
		
		public FastReader(String s) throws FileNotFoundException {
			br = new BufferedReader(new FileReader(new File(s)));
		}
		
		String next() {
			while(st == null || !st.hasMoreElements()) {
				try {
					st = new StringTokenizer(br.readLine());
				} catch(IOException e) {
					e.printStackTrace();
				}
			}
			return st.nextToken();
		}
		
		int nextInt() {
			return Integer.parseInt(next());
		}
		Long nextLong() {
			return Long.parseLong(next());
		}
		double nextDouble(){
			return Double.parseDouble(next());
		}
		String nextLine() {
			String str = "";
			try {
				str = br.readLine();
			}catch(IOException e) {
				e.printStackTrace();
			}
			return str;
		}
	}
}