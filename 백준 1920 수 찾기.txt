import java.io.BufferedReader;
import java.util.Arrays;
import java.util.StringTokenizer;
import java.io.InputStreamReader;
import java.io.FileReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;

public class Main {
	
	
	static int N,M;
	static int[] A;
	
	static FastReader scan = new FastReader();
	static StringBuilder sb = new StringBuilder();
	
	static void input() {
		N = scan.nextInt();
		A = new int [N + 1];
		for(int i=1;i<=N;i++) {
			A[i] = scan.nextInt();
		}

		
	
	}
	static boolean findAns(int[] A, int L, int R,int x) {
		
		while(L<=R) {
			int mid = (L + R) /2 ;
			
			if(A[mid] == x) {
				return true;
			}
			else if(A[mid] < x) {
				L = mid +1;
			}
			else {
				R = mid - 1;
			}
		}
		
		return false;
	}
	
	static void find() {
		Arrays.sort(A,1,N+1);
		
		M = scan.nextInt();
		
	for(int i=1 ;i<=M;i++) {
		int ans = scan.nextInt();
		if(findAns(A,1,N,ans)) {
			sb.append(1).append('\n');
		}
		else {
			sb.append(0).append('\n');
		}
	}
	
	System.out.println(sb);	
	}


	public static void main(String[] args) {
		// TODO Auto-generated method stub
	input();
	find();
		
	}
	
	static class FastReader {
	BufferedReader br;
	StringTokenizer st;
	
	public FastReader() {
		br = new BufferedReader(new InputStreamReader(System.in));
		}
	
	public FastReader(String s) throws FileNotFoundException {
		br = new BufferedReader(new FileReader(new File(s)));
		}
	
	
	String next() {
		while(st == null || !st.hasMoreElements()) {
			try {
				st = new StringTokenizer(br.readLine());
			} catch(IOException e) {
				e.printStackTrace();
			}
		}
		return st.nextToken();
		}
	
	int nextInt() {
		return Integer.parseInt(next());
	}
	long nextLong() {
		return Long.parseLong(next());
	}
	
	double nextDouble() {
		return Double.parseDouble(next());
	}
	
	String nextLine() {
		String str= "";
		try {
			str = br.readLine();
		} catch(IOException e) {
			e.printStackTrace();
		}
		return str;
		}
	}

}
