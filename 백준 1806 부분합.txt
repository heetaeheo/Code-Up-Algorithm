import java.io.*;
import java.util.*;



public class Main {
	
	static int N,S;
	static int A[];
	
	
	static FastReader scan = new FastReader();
	static StringBuilder sb = new StringBuilder();

	static void input() {
	
		N = scan.nextInt(); // 수열의 길이
		S = scan.nextInt(); // 요구하는 최소 합 S
		A = new int[N + 1]; // 수열의 값들 
		for(int i=1;i<=N;i++) {
			A[i] = scan.nextInt();
		}
	}

	


	static void find() {
		int R =0, sum =0, ans = N+1;
		for(int L = 1; L <= N; L++) {
			sum -= A[L-1];
		
		
		while(R + 1 <= N && sum < S) 
			sum += A[++R];
			
		
		if(sum >= S) 
			ans = Math.min(ans, R - L +1);
		
		}
		if(ans == N+1)
			ans = 0;
		System.out.println(ans);
	}
	

		
		
	public static void main(String[] args) {
		input();
		find();
	}
	
	static class FastReader{
		BufferedReader br;
		StringTokenizer st;
		
		public FastReader() {
			br = new BufferedReader(new InputStreamReader(System.in));
		}
		
		public FastReader(String s) throws FileNotFoundException {
			br = new BufferedReader(new FileReader(new File(s)));
		}
		
		String next() {
			while(st == null || !st.hasMoreElements()) {
				try {
					st = new StringTokenizer(br.readLine());
				} catch(IOException e) {
					e.printStackTrace();
				}
			}
			return st.nextToken();
		}
		
		int nextInt() {
			return Integer.parseInt(next());
		}
		Long nextLong() {
			return Long.parseLong(next());
		}
		double nextDouble(){
			return Double.parseDouble(next());
		}
		String nextLine() {
			String str = "";
			try {
				str = br.readLine();
			}catch(IOException e) {
				e.printStackTrace();
			}
			return str;
		}
	}
}